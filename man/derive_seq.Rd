% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/derive_seq.R
\name{derive_seq}
\alias{derive_seq}
\title{Derive the sequence number (\code{--SEQ}) variable}
\usage{
derive_seq(tgt_dat, tgt_var, id_vars = oak_id_vars(), start_at = 1L)
}
\arguments{
\item{tgt_dat}{The target dataset, a data frame.}

\item{tgt_var}{The target SDTM variable: a single string indicating the name
of the sequence number (\code{--SEQ}) variable, e.g. \code{"DSSEQ"}. Note that
supplying a name not ending in \code{"SEQ"} will raise a warning.}

\item{id_vars}{Either a character vector of identifier variables or \code{NULL}.
Default is the set of variables returned by \code{\link[=oak_id_vars]{oak_id_vars()}}.}

\item{start_at}{The sequence numbering starts at this value (default is \code{1}).}
}
\value{
Returns the data frame supplied in \code{tgt_dat} with the newly derived
variable, i.e. the sequence number (\code{--SEQ}), whose name is that passed in
\code{tgt_var}. This variable is of type integer.
}
\description{
\code{\link[=derive_seq]{derive_seq()}} creates a new identifier variable: the sequence number
(\code{--SEQ}).

This function adds a newly derived variable to \code{tgt_dat}, namely the sequence
number (\code{--SEQ}) whose name is the one provided in \code{tgt_var}. An integer
sequence is generated that uniquely identifies each record within the domain.

Prior to the derivation of \code{tgt_var}, the data frame \code{tgt_dat} is sorted
according to grouping variables indicated in \code{id_vars}.

Passing \code{NULL} to \code{id_vars} will ensure that every row in \code{tgt_dat} gets a
unique integer number in the column named by \code{tgt_var}.
}
\examples{
# An example Medical Devices (MD) domain raw data set.
md <-
  tibble::tribble(
    ~oak_id, ~raw_source, ~patient_number, ~MDBDR,        ~MDEDR,        ~MDETM,
    1L,      "MD1",       375,             NA,            NA,            NA,
    2L,      "MD1",       375,             "15-Sep-20",   NA,            NA,
    3L,      "MD1",       376,             "17-Feb-21",   "17-Feb-21",   NA,
    4L,      "MD1",       377,             "4-Oct-20",    NA,            NA,
    5L,      "MD1",       377,             "20-Jan-20",   "20-Jan-20",   "10:00:00",
    6L,      "MD1",       377,             "UN-UNK-2019", "UN-UNK-2019", NA,
    7L,      "MD1",       377,             "20-UNK-2019", "20-UNK-2019", NA,
    8L,      "MD1",       378,             "UN-UNK-2020", "UN-UNK-2020", NA,
    9L,      "MD1",       378,             "26-Jan-20",   "26-Jan-20",   "07:00:00",
    10L,     "MD1",       378,             "28-Jan-20",   "1-Feb-20",    NA,
    11L,     "MD1",       378,             "12-Feb-20",   "18-Feb-20",   NA,
    12L,     "MD1",       379,             "10-UNK-2020", "20-UNK-2020", NA,
    13L,     "MD1",       379,             NA,            NA,            NA,
    14L,     "MD1",       379,             NA,            "17-Feb-20",   NA
  )

# Derive the sequence number MDSEQ. By default, the grouping variables
# (`id_vars`) are the ones defined by `oak_id_vars()`.
derive_seq(tgt_dat = md, tgt_var = "MDSEQ")

# An example Vital Signs (VS) domain raw data set.
vs <- tibble::tribble(
  ~oak_id,   ~raw_source, ~patient_number, ~VSTESTCD, ~VISITNUM, ~VSTPTNUM,
  "PILOT01", "VS",        703,             "DIABP",   3,         815,
  "PILOT01", "VS",        703,             "DIABP",   3,         816,
  "PILOT01", "VS",        703,             "SYSBP",   4,         816,
  "PILOT01", "VS",        716,             "DIABP",   3,         815,
  "PILOT01", "VS",        716,             "DIABP",   3,         816,
  "PILOT01", "VS",        716,             "DIABP",   4,         815,
  "PILOT01", "VS",        716,             "SYSBP",   3,         815,
  "PILOT01", "VS",        716,             "SYSBP",   4,         816
)

# Derive sequence number by explicitly indicating the records' grouping
# defined by the variables `patient_number` and `VSTESTCD`.
vs_id_vars <- c("patient_number", "VSTESTCD")
derive_seq(tgt_dat = vs, tgt_var = "ASEQ", id_vars = vs_id_vars)

# If no grouping variables are provided then the rows are numbered
# sequentially in the order provided.
derive_seq(tgt_dat = vs, tgt_var = "ASEQ", id_vars = NULL)

}
