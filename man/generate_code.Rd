% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_code.R
\name{generate_code}
\alias{generate_code}
\title{Generate the code for the mapping SDTM specification}
\usage{
generate_code(spec, domain, out_dir = ".")
}
\arguments{
\item{spec}{The specification data frame.}

\item{domain}{The SDTM domain to generate the code for.}

\item{out_dir}{The directory to save the code file. Default is the current
directory.}
}
\value{
Side effect: the code is generated and saved to a file.
}
\description{
One can use the option \code{width} to control the width of the code. A width of
twenty will almost always place every parameter on a separate line. This is
useful for debugging and understanding the code. The higher the width, the
more parameters will be placed on a single line and code will be shorter.
See the examples for more details.
}
\examples{
\dontrun{
# VS domain ----
spec <- read_spec("vs_sdtm_oak_spec.csv")
domain <- "vs"

spec <- spec |>
  dplyr::filter(
    !is.na(target_sdtm_variable),
    !is.na(mapping_algorithm),
    !target_sdtm_variable \%in\% c("DOMAIN"),
    !mapping_is_dataset \%in\% c("TRUE")
  )

# CM domain ----

spec <- read_spec("cm_sdtm_oak_spec_cdash.csv")

spec <- spec |>
  dplyr::filter(
    !is.na(target_sdtm_variable),
    !is.na(mapping_algorithm),
    !target_sdtm_variable \%in\% c("DOMAIN")
  )

domain <- "cm"
generate_code(spec, domain)

# One can use option width to control the width of the code
# Twenty will almost always place every parameter on a separate line
old_width <- options(width = 20)
generate_code(spec, domain)
# Restore original width
options(width = old_width$width)
}

}
