% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dtc_utils.R
\name{coalesce_capture_matrices}
\alias{coalesce_capture_matrices}
\title{Coalesce capture matrices}
\usage{
coalesce_capture_matrices(...)
}
\arguments{
\item{...}{A sequence of capture matrices.}
}
\value{
A single capture matrix whose values have been coalesced in the
sense of \link[dplyr:coalesce]{coalesce()}.
}
\description{
\code{\link[=coalesce_capture_matrices]{coalesce_capture_matrices()}} combines several capture matrices into one.
Each argument of \code{...} should be a capture matrix in the sense of the output
by \code{\link[=complete_capture_matrix]{complete_capture_matrix()}}, meaning a character matrix of six columns
whose names are: \code{year}, \code{mon}, \code{mday}, \code{hour}, \code{min} or \code{sec}.
}
\examples{
cols <- c("year", "mon", "mday", "hour", "min", "sec")
dates <- c("2020", "01", "01", "20", NA, NA)
times <- c(NA, NA, NA, "10", "00", "05")
m_dates <- matrix(dates, nrow = 1L, ncol = 6L, dimnames = list(NULL, cols))
m_times <- matrix(times, nrow = 1L, ncol = 6L, dimnames = list(NULL, cols))

# Note how the hour "20" takes precedence over "10"
sdtm.oak:::coalesce_capture_matrices(m_dates, m_times)

# Reverse the order of the inputs and now hour "10" takes precedence
sdtm.oak:::coalesce_capture_matrices(m_times, m_dates)

# Single inputs should result in the same output as the input
sdtm.oak:::coalesce_capture_matrices(m_dates)
sdtm.oak:::coalesce_capture_matrices(m_times)

}
\keyword{internal}
