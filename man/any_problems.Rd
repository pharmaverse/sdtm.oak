% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dtc_problems.R
\name{any_problems}
\alias{any_problems}
\title{Detect problems with the parsing of date/times}
\usage{
any_problems(cap_matrices, .cutoff_2000 = 68L)
}
\arguments{
\item{cap_matrices}{A list of capture matrices in the sense of the returned
value by \code{\link[=parse_dttm]{parse_dttm()}}.}

\item{.cutoff_2000}{An integer value. Two-digit years smaller or equal to
\code{.cutoff_2000} are parsed as though starting with \code{20}, otherwise parsed as
though starting with \code{19}.}
}
\value{
A \code{logical} whose length matches the number of underlying date/times
passed as inputs to \code{\link[=create_iso8601]{create_iso8601()}}, i.e. whose length matches the
number of rows of the capture matrices in \code{cap_matrices}.
}
\description{
\code{\link[=any_problems]{any_problems()}} takes a list of capture matrices (see \code{\link[=parse_dttm]{parse_dttm()}}) and
reports on parsing problems by means of predicate values. A \code{FALSE} value
indicates that the parsing was successful and a \code{TRUE} value a parsing
failure in at least one of the inputs to \code{\link[=create_iso8601]{create_iso8601()}}. Note that this
is an internal function to be used in the context of \code{\link[=create_iso8601]{create_iso8601()}}
source code and hence each capture matrix corresponds to one input to
\code{\link[=create_iso8601]{create_iso8601()}}.
}
\examples{
# No problem (return value is `FALSE`).
sdtm.oak:::any_problems(list(sdtm.oak:::parse_dttm("1980-06-18", "y-m-d")))

# Now the parsing fails (return value is `TRUE`).
sdtm.oak:::any_problems(list(sdtm.oak:::parse_dttm("1980-06-18", "ymd")))

# Find if there has been a problem in either in the `date` or `time` inputs.
# The following problems are expected with:
#   - `"2001/12/25"` as it won't be parsed with the format `"y-m-d"`
#   - `"00h12m21"` as it won't be parsed with the format `"H:M:S"`.
#
date <- c("2000-01-05", "2001/12/25", "1980-06-18", "1979-09-07")
time <- c("00h12m21", "22:35:05", "03:00:15", "07:09:00")

cap_matrix_date <- sdtm.oak:::parse_dttm(date, "y-m-d")
cap_matrix_time <- sdtm.oak:::parse_dttm(time, "H:M:S")

(cap_matrices <- list(cap_matrix_date, cap_matrix_time))

# `any_problems()` returns `TRUE` for the first two elements because of the
# failure to parse `"2001/12/25"` and `"00h12m21"`, respectively.
sdtm.oak:::any_problems(cap_matrices)

}
\keyword{internal}
